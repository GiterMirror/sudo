SUDOERS.LDAP(4)              MAINTENANCE COMMANDS              SUDOERS.LDAP(4)



[1mNAME[0m
       sudoers.ldap - sudo LDAP configuration

[1mDESCRIPTION[0m
       In addition to the standard [4msudoers[24m file, [1msudo [22mmay be configured via
       LDAP.  This can be especially useful for synchronizing [4msudoers[24m in a
       large, distributed environment.

       Using LDAP for [4msudoers[24m has several benefits:

       +o   [1msudo [22mno longer needs to read [4msudoers[24m in its entirety.  When LDAP is
           used, there are only two or three LDAP queries per invocation.
           This makes it especially fast and particularly usable in LDAP
           environments.

       +o   [1msudo [22mno longer exits if there is a typo in [4msudoers[24m.  It is not
           possible to load LDAP data into the server that does not conform to
           the sudoers schema, so proper syntax is guaranteed.  It is still
           possible to have typos in a user or host name, but this will not
           prevent [1msudo [22mfrom running.

       +o   It is possible to specify per-entry options that override the
           global default options.  [4m/etc/sudoers[24m only supports default options
           and limited options associated with user/host/commands/aliases.
           The syntax is complicated and can be difficult for users to
           understand.  Placing the options directly in the entry is more
           natural.

       +o   The [1mvisudo [22mprogram is no longer needed.  [1mvisudo [22mprovides locking
           and syntax checking of the [4m/etc/sudoers[24m file.  Since LDAP updates
           are atomic, locking is no longer necessary.  Because syntax is
           checked when the data is inserted into LDAP, there is no need for a
           specialized tool to check syntax.

       Another major difference between LDAP and file-based [4msudoers[24m is that in
       LDAP, [1msudo[22m-specific Aliases are not supported.

       For the most part, there is really no need for [1msudo[22m-specific Aliases.
       Unix groups or user netgroups can be used in place of User_Aliases and
       Runas_Aliases.  Host netgroups can be used in place of Host_Aliases.
       Since Unix groups and netgroups can also be stored in LDAP there is no
       real need for [1msudo[22m-specific aliases.

       Cmnd_Aliases are not really required either since it is possible to
       have multiple users listed in a sudoRole.  Instead of defining a
       Cmnd_Alias that is referenced by multiple users, one can create a
       sudoRole that contains the commands and assign multiple users to it.

   [1mSUDOers LDAP container[0m
       The [4msudoers[24m configuration is contained in the ou=SUDOers LDAP
       container.

       Sudo first looks for the cn=default entry in the SUDOers container.  If
       found, the multi-valued sudoOption attribute is parsed in the same
       manner as a global Defaults line in [4m/etc/sudoers[24m.  In the following
       example, the SSH_AUTH_SOCK variable will be preserved in the
       environment for all users.

           dn: cn=defaults,ou=SUDOers,dc=example,dc=com
           objectClass: top
           objectClass: sudoRole
           cn: defaults
           description: Default sudoOption's go here
           sudoOption: env_keep+=SSH_AUTH_SOCK

       The equivalent of a sudoer in LDAP is a sudoRole.  It consists of the
       following attributes:

       [1msudoUser[0m
           A user name, uid (prefixed with '#'), Unix group (prefixed with a
           '%') or user netgroup (prefixed with a '+').

       [1msudoHost[0m
           A host name, IP address, IP network, or host netgroup (prefixed
           with a '+').  The special value ALL will match any host.

       [1msudoCommand[0m
           A Unix command with optional command line arguments, potentially
           including globbing characters (aka wild cards).  The special value
           ALL will match any command.  If a command is prefixed with an
           exclamation point '!', the user will be prohibited from running
           that command.

       [1msudoOption[0m
           Identical in function to the global options described above, but
           specific to the sudoRole in which it resides.

       [1msudoRunAsUser[0m
           A user name or uid (prefixed with '#') that commands may be run as
           or a Unix group (prefixed with a '%') or user netgroup (prefixed
           with a '+') that contains a list of users that commands may be run
           as.  The special value ALL will match any user.

           The sudoRunAsUser attribute is only available in [1msudo [22mversions
           1.7.0 and higher.  Older versions of [1msudo [22muse the sudoRunAs
           attribute instead.

       [1msudoRunAsGroup[0m
           A Unix group or gid (prefixed with '#') that commands may be run
           as.  The special value ALL will match any group.

           The sudoRunAsGroup attribute is only available in [1msudo [22mversions
           1.7.0 and higher.

       [1msudoNotBefore[0m
           A timestamp in the form yyyymmddHHMMSSZ that can be used to provide
           a start date/time for when the sudoRole will be valid.  If multiple
           sudoNotBefore entries are present, the earliest is used.  Note that
           timestamps must be in Coordinated Universal Time (UTC), not the
           local timezone.  The minute and seconds portions are optional, but
           some LDAP servers require that they be present (contrary to the
           RFC).

           The sudoNotBefore attribute is only available in [1msudo [22mversions
           1.7.5 and higher and must be explicitly enabled via the
           [1mSUDOERS_TIMED [22moption in [4m/etc/ldap.conf[24m.

       [1msudoNotAfter[0m
           A timestamp in the form yyyymmddHHMMSSZ that indicates an
           expiration date/time, after which the sudoRole will no longer be
           valid.  If multiple sudoNotBefore entries are present, the last one
           is used.  Note that timestamps must be in Coordinated Universal
           Time (UTC), not the local timezone.  The minute and seconds
           portions are optional, but some LDAP servers require that they be
           present (contrary to the RFC).

           The sudoNotAfter attribute is only available in [1msudo [22mversions 1.7.5
           and higher and must be explicitly enabled via the [1mSUDOERS_TIMED[0m
           option in [4m/etc/ldap.conf[24m.

       [1msudoOrder[0m
           The sudoRole entries retrieved from the LDAP directory have no
           inherent order.  The sudoOrder attribute is an integer (or floating
           point value for LDAP servers that support it) that is used to sort
           the matching entries.  This allows LDAP-based sudoers entries to
           more closely mimic the behaviour of the sudoers file, where the of
           the entries influences the result.  If multiple entries match, the
           entry with the highest sudoOrder attribute is chosen.  This
           corresponds to the "last match" behavior of the sudoers file.  If
           the sudoOrder attribute is not present, a value of 0 is assumed.

           The sudoOrder attribute is only available in [1msudo [22mversions 1.7.5
           and higher.

       Each attribute listed above should contain a single value, but there
       may be multiple instances of each attribute type.  A sudoRole must
       contain at least one sudoUser, sudoHost and sudoCommand.

       The following example allows users in group wheel to run any command on
       any host via [1msudo[22m:

           dn: cn=%wheel,ou=SUDOers,dc=example,dc=com
           objectClass: top
           objectClass: sudoRole
           cn: %wheel
           sudoUser: %wheel
           sudoHost: ALL
           sudoCommand: ALL

   [1mAnatomy of LDAP sudoers lookup[0m
       When looking up a sudoer using LDAP there are only two or three LDAP
       queries per invocation.  The first query is to parse the global
       options.  The second is to match against the user's name and the groups
       that the user belongs to.  (The special ALL tag is matched in this
       query too.)  If no match is returned for the user's name and groups, a
       third query returns all entries containing user netgroups and checks to
       see if the user belongs to any of them.

       If timed entries are enabled with the [1mSUDOERS_TIMED [22mconfiguration
       directive, the LDAP queries include a subfilter that limits retrieval
       to entries that satisfy the time constraints, if any.

   [1mDifferences between LDAP and non-LDAP sudoers[0m
       There are some subtle differences in the way sudoers is handled once in
       LDAP.  Probably the biggest is that according to the RFC, LDAP ordering
       is arbitrary and you cannot expect that Attributes and Entries are
       returned in any specific order.

       The order in which different entries are applied can be controlled
       using the sudoOrder attribute, but there is no way to guarantee the
       order of attributes within a specific entry.  If there are conflicting
       command rules in an entry, the negative takes precedence.  This is
       called paranoid behavior (not necessarily the most specific match).

       Here is an example:

           # /etc/sudoers:
           # Allow all commands except shell
           johnny  ALL=(root) ALL,!/bin/sh
           # Always allows all commands because ALL is matched last
           puddles ALL=(root) !/bin/sh,ALL

           # LDAP equivalent of johnny
           # Allows all commands except shell
           dn: cn=role1,ou=Sudoers,dc=my-domain,dc=com
           objectClass: sudoRole
           objectClass: top
           cn: role1
           sudoUser: johnny
           sudoHost: ALL
           sudoCommand: ALL
           sudoCommand: !/bin/sh

           # LDAP equivalent of puddles
           # Notice that even though ALL comes last, it still behaves like
           # role1 since the LDAP code assumes the more paranoid configuration
           dn: cn=role2,ou=Sudoers,dc=my-domain,dc=com
           objectClass: sudoRole
           objectClass: top
           cn: role2
           sudoUser: puddles
           sudoHost: ALL
           sudoCommand: !/bin/sh
           sudoCommand: ALL

       Another difference is that negations on the Host, User or Runas are
       currently ignored.  For example, the following attributes do not behave
       the way one might expect.

           # does not match all but joe
           # rather, does not match anyone
           sudoUser: !joe

           # does not match all but joe
           # rather, matches everyone including Joe
           sudoUser: ALL
           sudoUser: !joe

           # does not match all but web01
           # rather, matches all hosts including web01
           sudoHost: ALL
           sudoHost: !web01

   [1mSudoers Schema[0m
       In order to use [1msudo[22m's LDAP support, the [1msudo [22mschema must be installed
       on your LDAP server.  In addition, be sure to index the 'sudoUser'
       attribute.

       Three versions of the schema: one for OpenLDAP servers
       ([4mschema.OpenLDAP[24m), one for Netscape-derived servers ([4mschema.iPlanet[24m),
       and one for Microsoft Active Directory ([4mschema.ActiveDirectory[24m) may be
       found in the [1msudo [22mdistribution.

       The schema for [1msudo [22min OpenLDAP form is included in the EXAMPLES
       section.

   [1mConfiguring ldap.conf[0m
       Sudo reads the [4m/etc/ldap.conf[24m file for LDAP-specific configuration.
       Typically, this file is shared amongst different LDAP-aware clients.
       As such, most of the settings are not [1msudo[22m-specific.  Note that [1msudo[0m
       parses [4m/etc/ldap.conf[24m itself and may support options that differ from
       those described in the [4mldap.conf[24m(4) manual.

       Also note that on systems using the OpenLDAP libraries, default values
       specified in [4m/etc/openldap/ldap.conf[24m or the user's [4m.ldaprc[24m files are
       not used.

       Only those options explicitly listed in [4m/etc/ldap.conf[24m as being
       supported by [1msudo [22mare honored.  Configuration options are listed below
       in upper case but are parsed in a case-independent manner.

       [1mURI [22mldap[s]://[hostname[:port]] ...
           Specifies a whitespace-delimited list of one or more URIs
           describing the LDAP server(s) to connect to.  The [4mprotocol[24m may be
           either [1mldap [22mor [1mldaps[22m, the latter being for servers that support TLS
           (SSL) encryption.  If no [4mport[24m is specified, the default is port 389
           for ldap:// or port 636 for ldaps://.  If no [4mhostname[24m is specified,
           [1msudo [22mwill connect to [1mlocalhost[22m.  Multiple [1mURI [22mlines are treated
           identically to a [1mURI [22mline containing multiple entries.  Only
           systems using the OpenSSL libraries support the mixing of ldap://
           and ldaps:// URIs.  The Netscape-derived libraries used on most
           commercial versions of Unix are only capable of supporting one or
           the other.

       [1mHOST [22mname[:port] ...
           If no [1mURI [22mis specified, the [1mHOST [22mparameter specifies a whitespace-
           delimited list of LDAP servers to connect to.  Each host may
           include an optional [4mport[24m separated by a colon (':').  The [1mHOST[0m
           parameter is deprecated in favor of the [1mURI [22mspecification and is
           included for backwards compatibility.

       [1mPORT [22mport_number
           If no [1mURI [22mis specified, the [1mPORT [22mparameter specifies the default
           port to connect to on the LDAP server if a [1mHOST [22mparameter does not
           specify the port itself.  If no [1mPORT [22mparameter is used, the default
           is port 389 for LDAP and port 636 for LDAP over TLS (SSL).  The
           [1mPORT [22mparameter is deprecated in favor of the [1mURI [22mspecification and
           is included for backwards compatibility.

       [1mBIND_TIMELIMIT [22mseconds
           The [1mBIND_TIMELIMIT [22mparameter specifies the amount of time, in
           seconds, to wait while trying to connect to an LDAP server.  If
           multiple [1mURI[22ms or [1mHOST[22ms are specified, this is the amount of time to
           wait before trying the next one in the list.

       [1mNETWORK_TIMEOUT [22mseconds
           An alias for [1mBIND_TIMELIMIT [22mfor OpenLDAP compatibility.

       [1mTIMELIMIT [22mseconds
           The [1mTIMELIMIT [22mparameter specifies the amount of time, in seconds,
           to wait for a response to an LDAP query.

       [1mTIMEOUT [22mseconds
           The [1mTIMEOUT [22mparameter specifies the amount of time, in seconds, to
           wait for a response from the various LDAP APIs.

       [1mSUDOERS_BASE [22mbase
           The base DN to use when performing [1msudo [22mLDAP queries.  Typically
           this is of the form ou=SUDOers,dc=example,dc=com for the domain
           example.com.  Multiple [1mSUDOERS_BASE [22mlines may be specified, in
           which case they are queried in the order specified.

       [1mSUDOERS_SEARCH_FILTER [22mldap_filter
           An LDAP filter which is used to restrict the set of records
           returned when performing a [1msudo [22mLDAP query.  Typically, this is of
           the form attribute=value or
           (&(attribute=value)(attribute2=value2)).

       [1mSUDOERS_TIMED [22mon/true/yes/off/false/no
           Whether or not to evaluate the sudoNotBefore and sudoNotAfter
           attributes that implement time-dependent sudoers entries.

       [1mSUDOERS_DEBUG [22mdebug_level
           This sets the debug level for [1msudo [22mLDAP queries.  Debugging
           information is printed to the standard error.  A value of 1 results
           in a moderate amount of debugging information.  A value of 2 shows
           the results of the matches themselves.  This parameter should not
           be set in a production environment as the extra information is
           likely to confuse users.

       [1mBINDDN [22mDN
           The [1mBINDDN [22mparameter specifies the identity, in the form of a
           Distinguished Name (DN), to use when performing LDAP operations.
           If not specified, LDAP operations are performed with an anonymous
           identity.  By default, most LDAP servers will allow anonymous
           access.

       [1mBINDPW [22msecret
           The [1mBINDPW [22mparameter specifies the password to use when performing
           LDAP operations.  This is typically used in conjunction with the
           [1mBINDDN [22mparameter.

       [1mROOTBINDDN [22mDN
           The [1mROOTBINDDN [22mparameter specifies the identity, in the form of a
           Distinguished Name (DN), to use when performing privileged LDAP
           operations, such as [4msudoers[24m queries.  The password corresponding to
           the identity should be stored in [4m/etc/ldap.secret[24m.  If not
           specified, the [1mBINDDN [22midentity is used (if any).

       [1mLDAP_VERSION [22mnumber
           The version of the LDAP protocol to use when connecting to the
           server.  The default value is protocol version 3.

       [1mSSL [22mon/true/yes/off/false/no
           If the [1mSSL [22mparameter is set to on, true or yes, TLS (SSL)
           encryption is always used when communicating with the LDAP server.
           Typically, this involves connecting to the server on port 636
           (ldaps).

       [1mSSL [22mstart_tls
           If the [1mSSL [22mparameter is set to start_tls, the LDAP server
           connection is initiated normally and TLS encryption is begun before
           the bind credentials are sent.  This has the advantage of not
           requiring a dedicated port for encrypted communications.  This
           parameter is only supported by LDAP servers that honor the
           start_tls extension, such as the OpenLDAP server.

       [1mTLS_CHECKPEER [22mon/true/yes/off/false/no
           If enabled, [1mTLS_CHECKPEER [22mwill cause the LDAP server's TLS
           certificated to be verified.  If the server's TLS certificate
           cannot be verified (usually because it is signed by an unknown
           certificate authority), [1msudo [22mwill be unable to connect to it.  If
           [1mTLS_CHECKPEER [22mis disabled, no check is made.  Note that disabling
           the check creates an opportunity for man-in-the-middle attacks
           since the server's identity will not be authenticated.  If
           possible, the CA's certificate should be installed locally so it
           can be verified.

       [1mTLS_CACERT [22mfile name
           An alias for [1mTLS_CACERTFILE [22mfor OpenLDAP compatibility.

       [1mTLS_CACERTFILE [22mfile name
           The path to a certificate authority bundle which contains the
           certificates for all the Certificate Authorities the client knows
           to be valid, e.g. [4m/etc/ssl/ca-bundle.pem[24m.  This option is only
           supported by the OpenLDAP libraries.  Netscape-derived LDAP
           libraries use the same certificate database for CA and client
           certificates (see [1mTLS_CERT[22m).

       [1mTLS_CACERTDIR [22mdirectory
           Similar to [1mTLS_CACERTFILE [22mbut instead of a file, it is a directory
           containing individual Certificate Authority certificates, e.g.
           [4m/etc/ssl/certs[24m.  The directory specified by [1mTLS_CACERTDIR [22mis
           checked after [1mTLS_CACERTFILE[22m.  This option is only supported by the
           OpenLDAP libraries.

       [1mTLS_CERT [22mfile name
           The path to a file containing the client certificate which can be
           used to authenticate the client to the LDAP server.  The
           certificate type depends on the LDAP libraries used.

           OpenLDAP:
               tls_cert /etc/ssl/client_cert.pem

           Netscape-derived:
               tls_cert /var/ldap/cert7.db

           When using Netscape-derived libraries, this file may also contain
           Certificate Authority certificates.

       [1mTLS_KEY [22mfile name
           The path to a file containing the private key which matches the
           certificate specified by [1mTLS_CERT[22m.  The private key must not be
           password-protected.  The key type depends on the LDAP libraries
           used.

           OpenLDAP:
               tls_key /etc/ssl/client_key.pem

           Netscape-derived:
               tls_key /var/ldap/key3.db

       [1mTLS_RANDFILE [22mfile name
           The [1mTLS_RANDFILE [22mparameter specifies the path to an entropy source
           for systems that lack a random device.  It is generally used in
           conjunction with [4mprngd[24m or [4megd[24m.  This option is only supported by
           the OpenLDAP libraries.

       [1mTLS_CIPHERS [22mcipher list
           The [1mTLS_CIPHERS [22mparameter allows the administer to restrict which
           encryption algorithms may be used for TLS (SSL) connections.  See
           the OpenSSL manual for a list of valid ciphers.  This option is
           only supported by the OpenLDAP libraries.

       [1mUSE_SASL [22mon/true/yes/off/false/no
           Enable [1mUSE_SASL [22mfor LDAP servers that support SASL authentication.

       [1mSASL_AUTH_ID [22midentity
           The SASL user name to use when connecting to the LDAP server.  By
           default, [1msudo [22mwill use an anonymous connection.

       [1mROOTUSE_SASL [22mon/true/yes/off/false/no
           Enable [1mROOTUSE_SASL [22mto enable SASL authentication when connecting
           to an LDAP server from a privileged process, such as [1msudo[22m.

       [1mROOTSASL_AUTH_ID [22midentity
           The SASL user name to use when [1mROOTUSE_SASL [22mis enabled.

       [1mSASL_SECPROPS [22mnone/properties
           SASL security properties or [4mnone[24m for no properties.  See the SASL
           programmer's manual for details.

       [1mKRB5_CCNAME [22mfile name
           The path to the Kerberos 5 credential cache to use when
           authenticating with the remote server.

       See the ldap.conf entry in the EXAMPLES section.

   [1mConfiguring nsswitch.conf[0m
       Unless it is disabled at build time, [1msudo [22mconsults the Name Service
       Switch file, [4m/etc/nsswitch.conf[24m, to specify the [4msudoers[24m search order.
       Sudo looks for a line beginning with sudoers: and uses this to
       determine the search order.  Note that [1msudo [22mdoes not stop searching
       after the first match and later matches take precedence over earlier
       ones.

       The following sources are recognized:

           files       read sudoers from F</etc/sudoers>
           ldap        read sudoers from LDAP

       In addition, the entry [NOTFOUND=return] will short-circuit the search
       if the user was not found in the preceding source.

       To consult LDAP first followed by the local sudoers file (if it
       exists), use:

           sudoers: ldap files

       The local [4msudoers[24m file can be ignored completely by using:

           sudoers: ldap

       If the [4m/etc/nsswitch.conf[24m file is not present or there is no sudoers
       line, the following default is assumed:

           sudoers: files

       Note that [4m/etc/nsswitch.conf[24m is supported even when the underlying
       operating system does not use an nsswitch.conf file.

   [1mConfiguring netsvc.conf[0m
       On AIX systems, the [4m/etc/netsvc.conf[24m file is consulted instead of
       [4m/etc/nsswitch.conf[24m.  [1msudo [22msimply treats [4mnetsvc.conf[24m as a variant of
       [4mnsswitch.conf[24m; information in the previous section unrelated to the
       file format itself still applies.

       To consult LDAP first followed by the local sudoers file (if it
       exists), use:

           sudoers = ldap, files

       The local [4msudoers[24m file can be ignored completely by using:

           sudoers = ldap

       To treat LDAP as authoratative and only use the local sudoers file if
       the user is not present in LDAP, use:

           sudoers = ldap = auth, files

       Note that in the above example, the auth qualfier only affects user
       lookups; both LDAP and [4msudoers[24m will be queried for Defaults entries.

       If the [4m/etc/netsvc.conf[24m file is not present or there is no sudoers
       line, the following default is assumed:

           sudoers = files

[1mFILES[0m
       [4m/etc/ldap.conf[24m          LDAP configuration file

       [4m/etc/nsswitch.conf[24m      determines sudoers source order

       [4m/etc/netsvc.conf[24m        determines sudoers source order on AIX

[1mEXAMPLES[0m
   [1mExample ldap.conf[0m
         # Either specify one or more URIs or one or more host:port pairs.
         # If neither is specified sudo will default to localhost, port 389.
         #
         #host          ldapserver
         #host          ldapserver1 ldapserver2:390
         #
         # Default port if host is specified without one, defaults to 389.
         #port          389
         #
         # URI will override the host and port settings.
         uri            ldap://ldapserver
         #uri            ldaps://secureldapserver
         #uri            ldaps://secureldapserver ldap://ldapserver
         #
         # The amount of time, in seconds, to wait while trying to connect to
         # an LDAP server.
         bind_timelimit 30
         #
         # The amount of time, in seconds, to wait while performing an LDAP query.
         timelimit 30
         #
         # Must be set or sudo will ignore LDAP; may be specified multiple times.
         sudoers_base   ou=SUDOers,dc=example,dc=com
         #
         # verbose sudoers matching from ldap
         #sudoers_debug 2
         #
         # Enable support for time-based entries in sudoers.
         #sudoers_timed yes
         #
         # optional proxy credentials
         #binddn        <who to search as>
         #bindpw        <password>
         #rootbinddn    <who to search as, uses /etc/ldap.secret for bindpw>
         #
         # LDAP protocol version, defaults to 3
         #ldap_version 3
         #
         # Define if you want to use an encrypted LDAP connection.
         # Typically, you must also set the port to 636 (ldaps).
         #ssl on
         #
         # Define if you want to use port 389 and switch to
         # encryption before the bind credentials are sent.
         # Only supported by LDAP servers that support the start_tls
         # extension such as OpenLDAP.
         #ssl start_tls
         #
         # Additional TLS options follow that allow tweaking of the
         # SSL/TLS connection.
         #
         #tls_checkpeer yes # verify server SSL certificate
         #tls_checkpeer no  # ignore server SSL certificate
         #
         # If you enable tls_checkpeer, specify either tls_cacertfile
         # or tls_cacertdir.  Only supported when using OpenLDAP.
         #
         #tls_cacertfile /etc/certs/trusted_signers.pem
         #tls_cacertdir  /etc/certs
         #
         # For systems that don't have /dev/random
         # use this along with PRNGD or EGD.pl to seed the
         # random number pool to generate cryptographic session keys.
         # Only supported when using OpenLDAP.
         #
         #tls_randfile /etc/egd-pool
         #
         # You may restrict which ciphers are used.  Consult your SSL
         # documentation for which options go here.
         # Only supported when using OpenLDAP.
         #
         #tls_ciphers <cipher-list>
         #
         # Sudo can provide a client certificate when communicating to
         # the LDAP server.
         # Tips:
         #   * Enable both lines at the same time.
         #   * Do not password protect the key file.
         #   * Ensure the keyfile is only readable by root.
         #
         # For OpenLDAP:
         #tls_cert /etc/certs/client_cert.pem
         #tls_key  /etc/certs/client_key.pem
         #
         # For SunONE or iPlanet LDAP, tls_cert and tls_key may specify either
         # a directory, in which case the files in the directory must have the
         # default names (e.g. cert8.db and key4.db), or the path to the cert
         # and key files themselves.  However, a bug in version 5.0 of the LDAP
         # SDK will prevent specific file names from working.  For this reason
         # it is suggested that tls_cert and tls_key be set to a directory,
         # not a file name.
         #
         # The certificate database specified by tls_cert may contain CA certs
         # and/or the client's cert.  If the client's cert is included, tls_key
         # should be specified as well.
         # For backward compatibility, "sslpath" may be used in place of tls_cert.
         #tls_cert /var/ldap
         #tls_key /var/ldap
         #
         # If using SASL authentication for LDAP (OpenSSL)
         # use_sasl yes
         # sasl_auth_id <SASL user name>
         # rootuse_sasl yes
         # rootsasl_auth_id <SASL user name for root access>
         # sasl_secprops none
         # krb5_ccname /etc/.ldapcache

   [1mSudo schema for OpenLDAP[0m
       The following schema, in OpenLDAP format, is included with [1msudo [22msource
       and binary distributions as [4mschema.OpenLDAP[24m.  Simply copy it to the
       schema directory (e.g. [4m/etc/openldap/schema[24m), add the proper include
       line in slapd.conf and restart [1mslapd[22m.

        attributetype ( 1.3.6.1.4.1.15953.9.1.1
           NAME 'sudoUser'
           DESC 'User(s) who may  run sudo'
           EQUALITY caseExactIA5Match
           SUBSTR caseExactIA5SubstringsMatch
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.2
           NAME 'sudoHost'
           DESC 'Host(s) who may run sudo'
           EQUALITY caseExactIA5Match
           SUBSTR caseExactIA5SubstringsMatch
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.3
           NAME 'sudoCommand'
           DESC 'Command(s) to be executed by sudo'
           EQUALITY caseExactIA5Match
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.4
           NAME 'sudoRunAs'
           DESC 'User(s) impersonated by sudo'
           EQUALITY caseExactIA5Match
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.5
           NAME 'sudoOption'
           DESC 'Options(s) followed by sudo'
           EQUALITY caseExactIA5Match
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.6
           NAME 'sudoRunAsUser'
           DESC 'User(s) impersonated by sudo'
           EQUALITY caseExactIA5Match
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.7
           NAME 'sudoRunAsGroup'
           DESC 'Group(s) impersonated by sudo'
           EQUALITY caseExactIA5Match
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.8
           NAME 'sudoNotBefore'
           DESC 'Start of time interval for which the entry is valid'
           EQUALITY generalizedTimeMatch
           ORDERING generalizedTimeOrderingMatch
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.24 )

        attributetype ( 1.3.6.1.4.1.15953.9.1.9
           NAME 'sudoNotAfter'
           DESC 'End of time interval for which the entry is valid'
           EQUALITY generalizedTimeMatch
           ORDERING generalizedTimeOrderingMatch
           SYNTAX 1.3.6.1.4.1.1466.115.121.1.24 )

        attributeTypes ( 1.3.6.1.4.1.15953.9.1.10
            NAME 'sudoOrder'
            DESC 'an integer to order the sudoRole entries'
            EQUALITY integerMatch
            ORDERING integerOrderingMatch
            SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 )

        objectclass ( 1.3.6.1.4.1.15953.9.2.1 NAME 'sudoRole' SUP top STRUCTURAL
           DESC 'Sudoer Entries'
           MUST ( cn )
           MAY ( sudoUser $ sudoHost $ sudoCommand $ sudoRunAs $ sudoRunAsUser $
                 sudoRunAsGroup $ sudoOption $ sudoNotBefore $ sudoNotAfter $
                 sudoOrder $ description )
           )

[1mSEE ALSO[0m
       [4mldap.conf[24m(4), [4msudoers[24m(5)

[1mCAVEATS[0m
       Note that there are differences in the way that LDAP-based [4msudoers[24m is
       parsed compared to file-based [4msudoers[24m.  See the "Differences between
       LDAP and non-LDAP sudoers" section for more information.

[1mBUGS[0m
       If you feel you have found a bug in [1msudo[22m, please submit a bug report at
       http://www.sudo.ws/sudo/bugs/

[1mSUPPORT[0m
       Limited free support is available via the sudo-users mailing list, see
       http://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search
       the archives.

[1mDISCLAIMER[0m
       [1msudo [22mis provided ``AS IS'' and any express or implied warranties,
       including, but not limited to, the implied warranties of
       merchantability and fitness for a particular purpose are disclaimed.
       See the LICENSE file distributed with [1msudo [22mor
       http://www.sudo.ws/sudo/license.html for complete details.



1.7.7                           August 13, 2011                SUDOERS.LDAP(4)
